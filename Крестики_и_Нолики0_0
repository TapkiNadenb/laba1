
import tkinter as tk
from tkinter import messagebox

# Инициализация окна
window = tk.Tk()
window.title("Крестики-Нолики")

# Инициализация переменных
board = [' ' for _ in range(9)]  # 9 ячеек игрового поля
player = 'X'  # Игрок всегда играет за 'X'
ai = 'O'  # ИИ всегда играет за 'O'
game_over = False  # Игра продолжается


# Проверка победителя
def check_winner(b, mark):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8),  # Горизонтальные
                      (0, 3, 6), (1, 4, 7), (2, 5, 8),  # Вертикальные
                      (0, 4, 8), (2, 4, 6)]  # Диагональные
    for condition in win_conditions:
        if b[condition[0]] == b[condition[1]] == b[condition[2]] == mark:
            return True
    return False


# Проверка, закончилась ли игра
def is_board_full(b):
    return ' ' not in b


# Ход ИИ с помощью Минимакс алгоритма
def minimax(b, depth, is_ai):
    if check_winner(b, ai):
        return 1
    if check_winner(b, player):
        return -1
    if is_board_full(b):
        return 0

    if is_ai:
        best_score = -float('inf')
        for i in range(9):
            if b[i] == ' ':
                b[i] = ai
                score = minimax(b, depth + 1, False)
                b[i] = ' '
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = float('inf')
        for i in range(9):
            if b[i] == ' ':
                b[i] = player
                score = minimax(b, depth + 1, True)
                b[i] = ' '
                best_score = min(score, best_score)
        return best_score


# Ход ИИ
def ai_move():
    best_score = -float('inf')
    move = 0
    for i in range(9):
        if board[i] == ' ':
            board[i] = ai
            score = minimax(board, 0, False)
            board[i] = ' '
            if score > best_score:
                best_score = score
                move = i
    board[move] = ai
    buttons[move].config(text=ai)
    if check_winner(board, ai):
        messagebox.showinfo("Крестики-Нолики", "ИИ победил!")
        window.quit()
    elif is_board_full(board):
        messagebox.showinfo("Крестики-Нолики", "Ничья!")
        window.quit()


# Обработчик клика игрока
def player_move(index):
    global game_over
    if board[index] == ' ' and not game_over:
        board[index] = player
        buttons[index].config(text=player)
        if check_winner(board, player):
            messagebox.showinfo("Крестики-Нолики", "Ты победил!")
            game_over = True
            window.quit()
        elif is_board_full(board):
            messagebox.showinfo("Крестики-Нолики", "Ничья!")
            window.quit()
        else:
            ai_move()


# Создание кнопок для игрового поля
buttons = []
for i in range(9):
    button = tk.Button(window, text=" ", font='normal 20 bold', width=5, height=2,
                       command=lambda i=i: player_move(i))
    button.grid(row=i // 3, column=i % 3)
    buttons.append(button)

# Запуск основного цикла приложения
window.mainloop()
